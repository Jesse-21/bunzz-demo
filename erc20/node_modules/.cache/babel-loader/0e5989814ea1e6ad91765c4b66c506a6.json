{"ast":null,"code":"var _jsxFileName = \"/Users/hitsuji-haneta/dev/lastrust/bunzz-demo/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { bunzz } from \"bunzz-sdk\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"91965616-bf7e-4bde-97ea-a39c31980635\";\nconst DAPP_ID = \"d3779a9c-bf13-4842-b3e7-2328ffa2d7d4\";\n\nconst App = () => {\n  _s();\n\n  const [contract, setContract] = useState();\n  const [value, setValue] = useState(0);\n  const [userAddress, setUserAddress] = useState(\"hoge\");\n\n  const handleChange = e => setValue(e.target.value);\n\n  useEffect(() => {\n    const initialize = async () => {\n      try {\n        const handler = await bunzz.initializeHandler({\n          dappId: DAPP_ID,\n          apiKey: API_KEY\n        });\n        const userAddress = await handler.getSignerAddress();\n        console.log(userAddress);\n        setUserAddress(userAddress);\n        setContract(handler.getContract(\"ERC20\"));\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    initialize();\n  }, []);\n\n  const submit = async () => {\n    console.log(value);\n    console.log(userAddress);\n    const tx = contract.mint(userAddress, value);\n    const res = await tx.wait();\n    console.log('Token successfully minted! Congratulation ðŸŽ‰', res);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App App-header\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: value,\n      onChange: handleChange,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submit,\n      children: \"mint\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"ptmdS27EoAharB14nRpXDNEAd0U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/hitsuji-haneta/dev/lastrust/bunzz-demo/src/App.js"],"names":["useState","useEffect","bunzz","API_KEY","DAPP_ID","App","contract","setContract","value","setValue","userAddress","setUserAddress","handleChange","e","target","initialize","handler","initializeHandler","dappId","apiKey","getSignerAddress","console","log","getContract","error","submit","tx","mint","res","wait"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,KAAT,QAAsB,WAAtB;;AAGA,OAAO,WAAP;;AAEA,MAAMC,OAAO,GAAG,sCAAhB;AACA,MAAMC,OAAO,GAAG,sCAAhB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,EAAxC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,MAAD,CAA9C;;AAEA,QAAMY,YAAY,GAAIC,CAAD,IAAOJ,QAAQ,CAACI,CAAC,CAACC,MAAF,CAASN,KAAV,CAApC;;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,UAAU,GAAG,YAAY;AAC7B,UAAI;AACF,cAAMC,OAAO,GAAG,MAAMd,KAAK,CAACe,iBAAN,CAAwB;AAC5CC,UAAAA,MAAM,EAAEd,OADoC;AAE5Ce,UAAAA,MAAM,EAAEhB;AAFoC,SAAxB,CAAtB;AAIA,cAAMO,WAAW,GAAG,MAAMM,OAAO,CAACI,gBAAR,EAA1B;AAEAC,QAAAA,OAAO,CAACC,GAAR,CAAYZ,WAAZ;AACAC,QAAAA,cAAc,CAACD,WAAD,CAAd;AACAH,QAAAA,WAAW,CAACS,OAAO,CAACO,WAAR,CAAoB,OAApB,CAAD,CAAX;AACD,OAVD,CAUE,OAAOC,KAAP,EAAc;AACdH,QAAAA,OAAO,CAACG,KAAR,CAAcA,KAAd;AACD;AACF,KAdD;;AAgBAT,IAAAA,UAAU;AACX,GAlBQ,EAkBN,EAlBM,CAAT;;AAoBA,QAAMU,MAAM,GAAG,YAAY;AACzBJ,IAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAYZ,WAAZ;AACA,UAAMgB,EAAE,GAAGpB,QAAQ,CAACqB,IAAT,CAAcjB,WAAd,EAA2BF,KAA3B,CAAX;AACA,UAAMoB,GAAG,GAAG,MAAMF,EAAE,CAACG,IAAH,EAAlB;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAY,8CAAZ,EAA4DM,GAA5D;AACD,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE;AAAO,MAAA,KAAK,EAAEpB,KAAd;AAAqB,MAAA,QAAQ,EAAEI,YAA/B;AAA6C,MAAA,IAAI,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEa,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAzCD;;GAAMpB,G;;KAAAA,G;AA2CN,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { bunzz } from \"bunzz-sdk\";\n\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nconst API_KEY = \"91965616-bf7e-4bde-97ea-a39c31980635\";\nconst DAPP_ID = \"d3779a9c-bf13-4842-b3e7-2328ffa2d7d4\";\n\nconst App = () => {\n  const [contract, setContract] = useState();\n  const [value, setValue] = useState(0);\n  const [userAddress, setUserAddress] = useState(\"hoge\");\n\n  const handleChange = (e) => setValue(e.target.value);\n\n  useEffect(() => {\n    const initialize = async () => {\n      try {\n        const handler = await bunzz.initializeHandler({\n          dappId: DAPP_ID,\n          apiKey: API_KEY,\n        });\n        const userAddress = await handler.getSignerAddress();\n\n        console.log(userAddress);\n        setUserAddress(userAddress);\n        setContract(handler.getContract(\"ERC20\"));\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    initialize();\n  }, []);\n\n  const submit = async () => {\n    console.log(value);\n    console.log(userAddress);\n    const tx = contract.mint(userAddress, value);\n    const res = await tx.wait();\n    console.log('Token successfully minted! Congratulation ðŸŽ‰', res)\n  };\n\n  return (\n    <div className=\"App App-header\">\n      <input value={value} onChange={handleChange} type=\"text\" />\n      <button onClick={submit}>mint</button>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}